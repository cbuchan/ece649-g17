;========================================================================
; Unit Test for Dispatcher (2)
;========================================================================
;18649 Fall 2012
;Group17
;Collin Buchan (cbuchan) - Author
;Rajeev Sharma (rdsharma)
;Jesse Salazar (jessesal)
;Jessica Tiu   (jtiu)
;
;Last modified 2012-10-11 (cbuchan)
;========================================================================

; Unit test for Dispatcher
; General test, completes all transitions and states

#INCLUDE defines.mf ;include CAN id and period definitions

#DEFINE CONST_DWELL 100

;========================================================================
;initialize
;========================================================================
0s     I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = true
0s     I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = true
0s     I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = true
0s     I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = true

0s     I AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = true

;#state 'INIT'
+0.25s  A S Dispatcher : STATE == STATE_INIT
+0s     A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 1
+0s     A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == NONE
+0s     A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP

+0s     A N DESIRED_DWELL_[FRONT]_CAN_ID DesiredDwell FRONT : getDwell == CONST_DWELL
+0s     A N DESIRED_DWELL_[BACK]_CAN_ID DesiredDwell BACK : getDwell == CONST_DWELL

;#transition 'T11.1'
+0.25s  I DOOR_CONTROL_PERIOD N HALL_CALL_[1][FRONT][UP]_CAN_ID Boolean = true

;#state 'COMPUTE_NEXT'
;#transition 'T11.2'
;ALWAYS TRUE

;#transition 'T11.3'
;#state 'SERVICE_CALL'
+0.25s  A S Dispatcher : STATE == STATE_SERVICE_CALL
+0s     A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 2
+0s     A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == BACK
+0s     A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP

+0s     A N DESIRED_DWELL_[FRONT]_CAN_ID DesiredDwell FRONT : getDwell == CONST_DWELL
+0s     A N DESIRED_DWELL_[BACK]_CAN_ID DesiredDwell BACK : getDwell == CONST_DWELL

;Elevator travels up to desired floor...
+0.25s  I AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = false

;#transition 'T11.3'
;elevator arrives at new floor, and opens back doors
+0.25s  I AT_FLOOR_PERIOD N AT_FLOOR_[2][BACK]_CAN_ID AtFloor 2 BACK = true
+0.05s  I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = false
+0.05s  I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = false

;#state 'COMPUTE_NEXT'
;#transition 'T11.2'
;ALWAYS TRUE

;#state 'SERVICE_CALL'
+0.50s  A S Dispatcher : STATE == STATE_SERVICE_CALL
+0s     A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 3
+0s     A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT
+0s     A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP

;doors close again
+0.25s  I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = true
+0.05s  I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = true

;Elevator continues to operate in Sabbath mode...
+0.25s  I AT_FLOOR_PERIOD N AT_FLOOR_[2][BACK]_CAN_ID AtFloor 2 BACK = false

;#transition 'T11.3'

+0.25s  I AT_FLOOR_PERIOD N AT_FLOOR_[3][FRONT]_CAN_ID AtFloor 3 FRONT = true
+0.25s  I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = false
+0.05s  I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = false
+0.25s  I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = true
+0.05s  I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = true
+0.25s  I AT_FLOOR_PERIOD N AT_FLOOR_[3][FRONT]_CAN_ID AtFloor 3 FRONT = false

+0s     A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 4
+0s     A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT
+0s     A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP

+0.25s  I AT_FLOOR_PERIOD N AT_FLOOR_[4][FRONT]_CAN_ID AtFloor 4 FRONT = true
+0.25s  I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = false
+0.05s  I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = false
+0.25s  I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = true
+0.05s  I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = true
+0.25s  I AT_FLOOR_PERIOD N AT_FLOOR_[4][FRONT]_CAN_ID AtFloor 4 FRONT = false

+0s     A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 5
+0s     A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT
+0s     A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP

+0.25s  I AT_FLOOR_PERIOD N AT_FLOOR_[5][FRONT]_CAN_ID AtFloor 5 FRONT = true
+0.25s  I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = false
+0.05s  I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = false
+0.25s  I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = true
+0.05s  I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = true
+0.25s  I AT_FLOOR_PERIOD N AT_FLOOR_[5][FRONT]_CAN_ID AtFloor 5 FRONT = false

+0s     A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 6
+0s     A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT
+0s     A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP

+0.25s  I AT_FLOOR_PERIOD N AT_FLOOR_[6][FRONT]_CAN_ID AtFloor 6 FRONT = true
+0.25s  I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = false
+0.05s  I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = false
+0.25s  I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = true
+0.05s  I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = true
+0.25s  I AT_FLOOR_PERIOD N AT_FLOOR_[6][FRONT]_CAN_ID AtFloor 6 FRONT = false

+0s     A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 7
+0s     A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == BOTH
+0s     A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP

+0.25s  I AT_FLOOR_PERIOD N AT_FLOOR_[7][FRONT]_CAN_ID AtFloor 7 FRONT = true
+0.25s  I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = false
+0.05s  I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = false
+0.25s  I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = true
+0.05s  I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = true
+0.25s  I AT_FLOOR_PERIOD N AT_FLOOR_[7][FRONT]_CAN_ID AtFloor 7 FRONT = false

+0s     A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 8
+0s     A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT
+0s     A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP

+0.25s  I AT_FLOOR_PERIOD N AT_FLOOR_[8][FRONT]_CAN_ID AtFloor 8 FRONT = true
+0.25s  I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = false
+0.05s  I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = false
+0.25s  I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = true
+0.05s  I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = true
+0.25s  I AT_FLOOR_PERIOD N AT_FLOOR_[8][FRONT]_CAN_ID AtFloor 8 FRONT = false

+0s     A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 1
+0s     A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == BOTH
+0s     A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP

+0.25s  I AT_FLOOR_PERIOD N AT_FLOOR_[7][FRONT]_CAN_ID AtFloor 7 FRONT = true
