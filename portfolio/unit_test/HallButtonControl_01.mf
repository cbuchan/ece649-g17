; 18649 Fall 2012 - Group 17
; Jesse Salazar (jessesal)
; Jessica Tiu (jtiu)
; Collin Buchan (cbuchan) *
; Rajeev Sharma (rdsharma)
; * Author

; Unit test for HallButtonControl

;Note:  Assertions must be inserted more than two periods after a message or physical
;value has been inserted to be sure that the change propagates through the system

;this test file demonstrates network and framework message injections
;and network, framework, and controller state assertions.

#INCLUDE defines.mf ;include CAN id and period definitions

;initialize
0s  I  HALL_BUTTON_CONTROL_PERIOD F HallCall 4 FRONT DOWN  = false
0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = true

;#state HALL_CALL_OFF
;check that the light is off initially
0.21s  A S HallButtonControl[4][FRONT][DOWN] : STATE == STATE_HALL_CALL_OFF
0.21s  A F HallLight 4 FRONT DOWN : lighted == false
0.21s  A N HALL_CALL_[4][FRONT][DOWN]_CAN_ID TinyBoolean : getValue == false

;#transition T8.1
0.70s  I  HALL_BUTTON_CONTROL_PERIOD F HallCall 4 FRONT DOWN  = true
0.90s  I  HALL_BUTTON_CONTROL_PERIOD F HallCall 4 FRONT DOWN  = false

;#state HALL_CALL_ON
;check that the light is on
1.21s  A S HallButtonControl[4][FRONT][DOWN] : STATE == STATE_HALL_CALL_ON
1.21s  A F HallLight 4 FRONT DOWN : lighted == true
1.21s  A N HALL_CALL_[4][FRONT][DOWN]_CAN_ID TinyBoolean : getValue == true

;#transition T8.2
1.40s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = false
1.40s  I  AT_FLOOR_PERIOD N AT_FLOOR_[4][FRONT]_CAN_ID AtFloor 4 FRONT = true
1.40s  I  DISPATCHER_PERIOD N DESIRED_FLOOR_CAN_ID DesiredFloor = 4 FRONT STOP

;#state HALL_CALL_OFF
;check that the light is off
1.71s  A S HallButtonControl[4][FRONT][DOWN] : STATE == STATE_HALL_CALL_OFF
1.71s  A F HallLight 4 FRONT DOWN : lighted == false
1.71s  A N HALL_CALL_[4][FRONT][DOWN]_CAN_ID TinyBoolean : getValue == false


;prepare elevator for T8.1 (door closes on its way to another floor)
2.0s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = true
2.0s  I  AT_FLOOR_PERIOD N AT_FLOOR_[4][FRONT]_CAN_ID AtFloor 4 FRONT = false

;#transition T8.1
2.30s  I  HALL_BUTTON_CONTROL_PERIOD F HallCall 4 FRONT DOWN  = true
2.50s  I  HALL_BUTTON_CONTROL_PERIOD F HallCall 4 FRONT DOWN  = false

;#state HALL_CALL_ON
;check that the light is on
2.71s  A S HallButtonControl[4][FRONT][DOWN] : STATE == STATE_HALL_CALL_ON
2.71s  A F HallLight 4 FRONT DOWN : lighted == true
2.71s  A N HALL_CALL_[4][FRONT][DOWN]_CAN_ID TinyBoolean : getValue == true

;#transition T8.2
3.00s  I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = false
3.00s  I  AT_FLOOR_PERIOD N AT_FLOOR_[4][FRONT]_CAN_ID AtFloor 4 FRONT = true
3.00s  I  DISPATCHER_PERIOD N DESIRED_FLOOR_CAN_ID DesiredFloor = 4 FRONT DOWN

;#state HALL_CALL_OFF
;check that the light is off
3.41s  A S HallButtonControl[4][FRONT][DOWN] : STATE == STATE_HALL_CALL_OFF
3.41s  A F HallLight 4 FRONT DOWN : lighted == false
3.41s  A N HALL_CALL_[4][FRONT][DOWN]_CAN_ID TinyBoolean : getValue == false
