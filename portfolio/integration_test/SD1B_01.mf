;========================================================================
; Integration Test for SD1B
;========================================================================
;18649 Fall 2012
;Group17
;Collin Buchan (cbuchan) - Author
;Rajeev Sharma (rdsharma)
;Jesse Salazar (jessesal)
;Jessica Tiu   (jtiu)

;Last modified 2012-11-08 (cbuchan)
;========================================================================

#INCLUDE defines.mf ;include CAN id and period definitions

;========================================================================
;initialize
;========================================================================
;Car is at same floor as passenger (Floor 4).
;Car is traveling in same direction d (Direction DOWN) as desired by passenger.
;At least one door[b,r] (FRONT, LEFT) is open.
;Hall button light [f,b,d] (FRONT, LEFT, DOWN) for passenger's desired direction is off.

+0.25s  A S Dispatcher : STATE == STATE_RESET

; DoorControl in closed state
+0s I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = true
+0s I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = true
+0s I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = true
+0s I  DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = true

+0s I AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = true

+0.25s I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[5][FRONT][UP]_CAN_ID TinyBoolean = true
+0.25s I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[1][FRONT][UP]_CAN_ID TinyBoolean = true

+0.25s  A S Dispatcher : STATE == STATE_SERVICE_CALL
+0s     A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 1
+0s     A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT
+0s     A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP

+0s	I DRIVE_PERIOD N DRIVE_SPEED_CAN_ID DriveSpeed = 0 STOP
+0.25s   A F DoorMotor FRONT LEFT : command == OPEN

+0.25s I DOOR_OPENED_SENSOR_PERIOD N DOOR_OPEN_SENSOR_[FRONT][RIGHT]_CAN_ID DoorOpened FRONT RIGHT = true
+0s   I DOOR_OPENED_SENSOR_PERIOD N DOOR_OPEN_SENSOR_[FRONT][LEFT]_CAN_ID DoorOpened FRONT LEFT = true

+0.25s   A F DoorMotor FRONT LEFT : command == STOP
+0s  A  S DoorControl[FRONT][LEFT] : STATE == STATE_DOOR_OPEN
+0s   I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = false
+0s   I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = false
+0.25s I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[1][FRONT][UP]_CAN_ID TinyBoolean = false

;========================================================================
;1. Door[b,r] starts closing.
;========================================================================
;arc 1B/1
+5s  A  S DoorControl[FRONT][LEFT] : STATE == STATE_DOOR_CLOSING
+0s    A  F DoorMotor FRONT LEFT : command == CLOSE

;========================================================================
;2. Passenger arrives at a hallway [f, b] to use the elevator, with
;   intent to travel in direction d.
;3. Passenger presses hall call button before doors are fully closed,
;   but after doors are too fully closed for passenger to enter.
;========================================================================
+0.5s   A  S Dispatcher : STATE == STATE_COMPUTE_NEXT
+0s     A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 5
+0s     A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT
+0s	    A	N	DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP

;passenger makes a hall call
;arc 1B/2
;arc 1B/3a
;arc 1B/3b
+0s  I HALL_BUTTON_CONTROL_PERIOD F HallCall 1 FRONT UP  = true

;========================================================================
;4. Hall button lights up.
;========================================================================
;arc 1B/4a
;arc 1B/4b
+0.5s  A  F HallLight 1 FRONT UP : lighted == true

;========================================================================
;5. Dispatcher does not update mDesiredFloor to f,b,d.Â 
;========================================================================
;Dispatcher keeps desired floor
;arc 1B/5a
;arc 1B/5b
+0.5s   A  S Dispatcher : STATE == STATE_COMPUTE_NEXT
+0s	    A	N	DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 5
+0s	    A	N	DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT
+0s	    A	N	DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP

;========================================================================
;6. Doors close completely.
;========================================================================
+0.1s   I  DRIVE_PERIOD N DRIVE_SPEED_CAN_ID DriveSpeed = 0.0 STOP

;arc 1B/6a
;arc 1B/6b
;arc 1B/6c
+0.41s  A  F DoorMotor FRONT LEFT : command == CLOSE
+0.1s   I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = true
+0.1s   I  DOOR_OPENED_SENSOR_PERIOD N DOOR_OPEN_SENSOR_[FRONT][LEFT]_CAN_ID DoorOpened FRONT LEFT = false
+0.41s  A  F DoorMotor FRONT LEFT : command == STOP

;========================================================================
;Post Conditions
;========================================================================
;Elevator is at the passenger's floor.
;Door is closed.
;Hall button light for passenger's desired direction is on.

+0.5s   A  F HallLight 1 FRONT UP : lighted == true

